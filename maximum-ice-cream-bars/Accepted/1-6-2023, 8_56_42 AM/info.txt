{"id":872352007,"lang":"cpp","lang_name":"C++","time":"2 weeks, 5 days","timestamp":1672975602,"status":10,"status_display":"Accepted","runtime":"352 ms","url":"/submissions/detail/872352007/","is_pending":"Not Pending","title":"Maximum Ice Cream Bars","memory":"87.7 MB","code":"class Solution {\npublic:\n    int dfs(vector<int>& dp,vector<int>& nums , int coins , int i , int n){\n        if(coins <= 0){\n            return 0;\n        }\n        if(i == n-1){\n            if(nums[i] <= coins){\n                return 1;\n            }\n            else{\n                return 0;\n            }\n        }\n        if(dp[i] != -1){\n            return dp[i];\n        }\n        int can = 0 , cant = 0;\n        if(nums[i] <= coins){\n            can = 1 + dfs(dp , nums , coins - nums[i] , i + 1 , n);\n        }\n        cant = dfs(dp , nums , coins , i + 1 , n);\n        return dp[i] = max(can , cant);\n    }\n    int maxIceCream(vector<int>& costs, int coins) {\n        int n = costs.size();\n        vector<int> dp(n+1 , -1);\n        sort(costs.begin() , costs.end());\n        return dfs(dp , costs , coins , 0 , n);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-ice-cream-bars","has_notes":false}