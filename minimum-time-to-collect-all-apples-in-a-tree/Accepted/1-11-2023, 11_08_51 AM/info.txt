{"id":875913743,"lang":"cpp","lang_name":"C++","time":"2Â weeks","timestamp":1673415531,"status":10,"status_display":"Accepted","runtime":"257 ms","url":"/submissions/detail/875913743/","is_pending":"Not Pending","title":"Minimum Time to Collect All Apples in a Tree","memory":"60.2 MB","code":"class Solution {\npublic:\n    vector<int> adj[100005];\n\n    pair<int,int> dfs(int node, int parent,vector<bool>& hasApple){\n        pair<int,int>v ={0,hasApple[node]};\n        for(int i: adj[node]){\n            if(i!=parent){\n                pair<int,int> x= dfs(i,node,hasApple);\n                v.first += (2+ x.first)*x.second;\n                v.second |= x.second;\n            }\n        }\n        return v;\n    } \n\n    int minTime(int n, vector<vector<int>>& edges, vector<bool>& hasApple) {\n        for(int i=0;i<edges.size();i++){\n            adj[edges[i][0]].push_back(edges[i][1]);\n            adj[edges[i][1]].push_back(edges[i][0]);\n        }\n        return dfs(0,0,hasApple).first;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"minimum-time-to-collect-all-apples-in-a-tree","has_notes":false}