{"id":855012738,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1670245002,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/855012738/","is_pending":"Not Pending","title":"Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts","memory":"N/A","code":"class Solution {\npublic:\n    int maxArea(int h, int w, vector<int>& horizontalCuts, vector<int>& verticalCuts) {\n        \n        horizontalCuts.push_back(0);\n        horizontalCuts.push_back(h);\n        sort(horizontalCuts.begin(),horizontalCuts.end());\n        \n        \n        verticalCuts.push_back(0);\n        verticalCuts.push_back(w);\n        sort(verticalCuts.begin(),verticalCuts.end());\n        \n        \n        int maxh=0;  int maxw=0;\n        \n        for(int i=0;i<horizontalCuts.size()-1;i++){\n            if(maxh<(horizontalCuts[i+1]-horizontalCuts[i])){\n                maxh = (horizontalCuts[i+1]-horizontalCuts[i])%1000000007;\n            }\n        }\n        \n         for(int i=0;i<verticalCuts.size()-1;i++){\n            if(maxw<(verticalCuts[i+1]-verticalCuts[i])){\n                maxw = (verticalCuts[i+1]-verticalCuts[i])%1000000007;\n            }\n        }\n  \n        return (maxh*maxw)%1000000007;\n    }\n};\n","compare_result":"11111000000000000000000000000000000000000000000000000000","title_slug":"maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts","has_notes":false}