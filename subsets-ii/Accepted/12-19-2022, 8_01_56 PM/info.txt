{"id":862150463,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1671460316,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/862150463/","is_pending":"Not Pending","title":"Subsets II","memory":"11.1 MB","code":"class Solution {\npublic:\n    vector<vector<int>> subsetsWithDup(vector<int>& nums) {\n        vector<vector<int>> ans;       //to store all susbets\n        bool prev;\n        vector<int> curr;         //to store current individual subset (that we will build)\n        sort(nums.begin(),nums.end());      //sort the array so that duplicates are adjacent \n        helper(nums,curr,0,ans,false);       //we start from index 0\n        return ans;\n        \n    }\n    \n   void helper(vector<int>& nums,vector<int>&temp,int i, vector<vector<int>>&ans, bool prev ){\n        if(i==nums.size())\n            ans.push_back(temp);\n        else{\n        helper(nums,temp,i+1,ans,false);\n        //include\n        if(i>0 and nums[i]==nums[i-1] and (!prev)) return;\n        temp.push_back(nums[i]);\n        helper(nums,temp,i+1,ans,true);\n\n        //exclude\n        temp.pop_back();\n        \n        }\n    }  \n};","compare_result":"11111111111111111111","title_slug":"subsets-ii","has_notes":false}