{"id":845774873,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1668770624,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/845774873/","is_pending":"Not Pending","title":"Two Sum","memory":"N/A","code":"class Solution {\npublic:\n    /* This function returns (true, index) if element is found otherwise\n       it returns (false, -1)\n    */\n    int binary_search(std::vector<std::pair<int,int>>& a, int ind, int key) {\n        int i = 0, j = a.size();\n        while (i <= j) {\n            int m = (i + j) / 2;\n            if (a[m].first == key and m!=ind) {\n                return a[m].second;\n            } else if (a[m].first < key) {\n                i = m + 1;\n            } else {\n                j = m - 1;\n            }\n        }\n        return -1;\n    }\n    \n    \n    vector<int> twoSum(vector<int>& nums, int target) {\n        int n = nums.size();\n        \n        // Making the nested list\n        std::vector<std::pair<int,int>> a {};\n        for (int i = 0; i < n; i++) {\n            a.push_back(std::make_pair(nums[i], i));\n        }\n        \n        // Sorting the array so that binary search can be used\n        std::sort(a.begin(), a.end());\n        \n        // Finding the pair using binary search\n        for (int i = 0; i < n; i++) {\n            int key = target - a[i].first;\n            int res = binary_search(a, i, key);\n            \n            // found the pair\n            if (res !=-1) {\n                return {a[i].second, res};\n            }\n        }\n        \n        /* This is written to avoid the compiler warning of not returning \n           anything from the function which has a return type of vector<int>\n        */\n        return {};\n    }\n};","compare_result":"111111111100000000000000000000000000000000000000000000000","title_slug":"two-sum","has_notes":false}