{"id":855020906,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1670246201,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/855020906/","is_pending":"Not Pending","title":"Max Area of Island","memory":"24 MB","code":"class Solution {\npublic:\n    int n, m, cnt, vis[55][55];\n    vector<vector<int>> grids;\n\n    bool valid(int x, int y) {\n        if(x >= 0 and x <n and y >= 0 and y < m and !vis[x][y] and grids[x][y]) return true;\n        else return false;\n    }\n\n    void dfs(int x, int y) {\n        if(valid(x, y)) {\n            cnt++;\n            vis[x][y] = 1;\n            dfs(x+1, y);\n            dfs(x-1, y);\n            dfs(x, y+1);\n            dfs(x, y-1);\n        }\n    }\n\n    int maxAreaOfIsland(vector<vector<int>>& grid) {\n        memset(vis, 0, sizeof(vis));\n        grids = grid;\n        n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        for(int i=0; i<n; i++) {\n            for(int j=0; j<m; j++) {\n                if(valid(i, j)) {\n                    cnt = 0;\n                    dfs(i, j);\n                    ans = max(ans, cnt);\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_resulttitle_slug":"max-area-of-island","has_notes":false}