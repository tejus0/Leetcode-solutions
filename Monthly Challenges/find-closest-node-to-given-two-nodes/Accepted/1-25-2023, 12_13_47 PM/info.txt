{"id":884851870,"lang":"cpp","lang_name":"C++","time":"27Â minutes","timestamp":1674629027,"status":10,"status_display":"Accepted","runtime":"235 ms","url":"/submissions/detail/884851870/","is_pending":"Not Pending","title":"Find Closest Node to Given Two Nodes","memory":"97.7 MB","code":"class Solution {\npublic:\nint closestMeetingNode(vector<int>& edges, int node1, int node2) {\n        \n        vector<int>dist_node1(edges.size(),-1);\n        vector<int>dist_node2(edges.size(),-1);\n        \n        vector<bool>visited(edges.size(),false);\n        dfs(node1,dist_node1,visited,edges,0);\n        visited.assign(edges.size(),false);\n        dfs(node2,dist_node2,visited,edges,0);\n        \n        int ans = edges.size();\n        int result = -1;\n         for(int i=0;i<edges.size();i++)\n         {  \n             if(dist_node1[i]!=-1 && dist_node2[i]!=-1)\n             {\n            if(max(dist_node1[i] , dist_node2[i]) < ans)\n            {\n                ans = max(dist_node1[i] , dist_node2[i]);\n                result = i;\n            }\n             }\n         }\n        return result;\n       \n    }\n    \n      void dfs(int node, vector<int>&dist_node1, vector<bool>&visited,\n              vector<int>& edges, int distance)\n      {          \n           if(node!=-1 && !visited[node] )\n           {  visited[node] = true;\n              dist_node1[node] = distance;\n             dfs(edges[node], dist_node1, visited, edges, distance+1);\n           }\n      }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-closest-node-to-given-two-nodes","has_notes":true}