{"id":881784495,"lang":"cpp","lang_name":"C++","time":"4 days, 19 hours","timestamp":1674214794,"status":10,"status_display":"Accepted","runtime":"126 ms","url":"/submissions/detail/881784495/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"68.6 MB","code":"class Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n        int dp[1000000];\n        int n = nums.size();\n        dp[0] = nums[0];\n        int maxSum = dp[0];\n        for (int i = 1; i < n; i++) {\n            dp[i] = nums[i] + (dp[i - 1] > 0 ? dp[i - 1] : 0);\n            maxSum = max(dp[i], maxSum);\n        }\n        return maxSum;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray","has_notes":false}