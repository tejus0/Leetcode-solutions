{"id":883193241,"lang":"cpp","lang_name":"C++","time":"2 days, 13 hours","timestamp":1674407918,"status":10,"status_display":"Accepted","runtime":"146 ms","url":"/submissions/detail/883193241/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"75.7 MB","code":"class Solution {\npublic:\n    vector<vector<string>> res;\n    bool isPalindrome(string s){\n        int n=s.length();\n        if(n==1)return true;\n        for(int i=0;i<=n/2;i++){\n            if(s[i]!=s[n-i-1]) return false;\n        }return true;\n    }\n    void fun(int i,string& s,vector<string>& temp){\n        if(i>=s.length()){\n            res.push_back(temp);\n            return;\n        }\n        for(int k=1;k<=s.length()-i;k++){\n            if(!isPalindrome(s.substr(i,k))) continue;\n            temp.push_back(s.substr(i,k));\n            fun(i+k,s,temp);\n            temp.pop_back();   \n        }\n        return ;\n    }\n    \n    vector<vector<string>> partition(string s) {\n        vector<string> temp;\n        fun(0,s,temp);\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false}