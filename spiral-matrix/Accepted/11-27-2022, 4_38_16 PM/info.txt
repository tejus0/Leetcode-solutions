{"id":850611439,"lang":"cpp","lang_name":"C++","time":"1 month, 4 weeks","timestamp":1669547296,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/850611439/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"6.8 MB","code":"class Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        vector<int> ans;\n        int m=matrix.size();\n        int n= matrix[0].size();\n        int start_col=0, end_col=n-1, start_row=0, end_row=m-1;\n        while(start_col <=end_col and start_row<=end_row){\n            for(int i=start_col;i<=end_col;i++){\n                ans.push_back(matrix[start_row][i]);\n            }\n            start_row++;\n            for(int i=start_row;i<=end_row;i++){\n                ans.push_back(matrix[i][end_col]);\n            }\n            end_col--;\n            if(end_row>=start_row){\n            for(int i=end_col;i>=start_col;i--){\n                ans.push_back(matrix[end_row][i]);\n                }\n            end_row--;\n            }\n            if(end_col>=start_col){\n            for(int i=end_row;i>=start_row;i--){\n                ans.push_back(matrix[i][start_col]);\n            }\n            start_col++;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"spiral-matrix","has_notes":false}