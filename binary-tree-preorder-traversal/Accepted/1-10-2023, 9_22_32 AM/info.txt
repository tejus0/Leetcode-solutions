{"id":875169523,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1673322752,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/875169523/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode* root) {\n        vector<int> result;\n    TreeNode *cur = root;\n    while (cur) {\n        TreeNode *mostRight = cur ->left;\n        if (mostRight) {\n            while (mostRight->right != NULL && mostRight->right != cur) {\n                mostRight = mostRight ->right;\n            }\n            if (mostRight->right == NULL) {\n                result.push_back(cur->val);\n                mostRight->right = cur;\n                cur = cur ->left;\n                continue;\n            } else {\n                mostRight->right = NULL;\n            }\n        } else {\n            result.push_back(cur->val);\n        }\n        cur = cur->right;\n    }\n    \n    return result;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false}