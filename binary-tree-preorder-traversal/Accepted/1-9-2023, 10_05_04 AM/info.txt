{"id":874488295,"lang":"cpp","lang_name":"C++","time":"2 weeks, 2 days","timestamp":1673238904,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/874488295/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"8.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode* root) { \n        vector<int> preorder;\n        stack<TreeNode*> st;\n        //TreeNode* curr=root;\n        //st.push(root);\n        while(root || !st.empty()){\n            if(root){\n                preorder.push_back(root->val);\n                if(root->right) st.push(root->right);\n                root=root->left;\n                //if(root->left) st.push(root->left);\n            }\n            else{\n            root= st.top();\n            st.pop();\n            }\n        }\n        return preorder;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false}