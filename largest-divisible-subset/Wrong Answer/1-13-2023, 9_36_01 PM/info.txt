{"id":877514913,"lang":"cpp","lang_name":"C++","time":"1 week, 4 days","timestamp":1673625961,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/877514913/","is_pending":"Not Pending","title":"Largest Divisible Subset","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> largestDivisibleSubset(vector<int>& nums) {\n        int n= nums.size();\n        //sort(nums.begin(),nums.end());\n        int max=1;\n        vector<int> dp(n,1);\n        for(int i=0;i<n;i++){\n            for(int j=0;j<i;j++){\n                if(nums[i]%nums[j]==0 and 1+dp[j]>dp[i]){\n                    dp[i]=1+dp[j];\n                    if(max<dp[i]) max=dp[i];\n                }\n            }\n        }\n        int prev=-1;\n        vector<int> ans;\n        for(int i=n-1;i>=0;i--){\n            if(dp[i]==max and (prev%nums[i]==0 || prev==-1)){\n                ans.push_back(nums[i]);\n                max--;\n                prev=nums[i];\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111110111111111111000000000000000000000000111","title_slug":"largest-divisible-subset","has_notes":false}