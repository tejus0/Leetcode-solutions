{"id":876536075,"lang":"cpp","lang_name":"C++","time":"1 week, 6 days","timestamp":1673496211,"status":10,"status_display":"Accepted","runtime":"605 ms","url":"/submissions/detail/876536075/","is_pending":"Not Pending","title":"Number of Boomerangs","memory":"85.3 MB","code":"class Solution {\npublic:\n    int numberOfBoomerangs(vector<vector<int>>& points) {\n        // create an unordered map to store the distances between points\n    unordered_map<int, int> distances;\n    // initialize the number of boomerangs to 0\n    int num_boomerangs = 0;\n    \n    // loop through each point\n    for (int i = 0; i < points.size(); i++) {\n        // loop through the remaining points\n        for (int j = 0; j < points.size(); j++) {\n            // calculate the distance between points i and j\n            int distance = (points[i][0] - points[j][0]) * (points[i][0] - points[j][0]) + (points[i][1] - points[j][1]) * (points[i][1] - points[j][1]);\n            // if distance is not already in the unordered map, add it as a key and set its value to 1\n            if (distances.find(distance) == distances.end()) {\n                distances[distance] = 1;\n            }\n            // if distance is already in the unordered map, increment its value by 1\n            else {\n                distances[distance]++;\n            }\n        }\n        // loop through the values in the distances unordered map\n        for (auto val : distances) {\n            // add the number of boomerangs to the total count using the value of the distance\n            num_boomerangs += val.second * (val.second - 1);\n        }\n        // clear the distances unordered map for the next iteration\n        distances.clear();\n    }\n    \n    // return the total number of boomerangs\n    return num_boomerangs;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"number-of-boomerangs","has_notes":false}