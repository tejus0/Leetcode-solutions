{"id":857088002,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1670582856,"status":10,"status_display":"Accepted","runtime":"433 ms","url":"/submissions/detail/857088002/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"91.6 MB","code":"class Solution {\npublic:\n\n    vector<int> nsr(vector<int>& heights, int n){\n        vector<int> next_s;\n        stack<int> st;\n        for(int i=n-1;i>=0;i--){\n            while(!st.empty() and heights[st.top()]>=heights[i]){\n                st.pop();\n            }\n            if(st.empty()) {\n                next_s.push_back(n);\n            }\n            else{\n                next_s.push_back(st.top());\n            }\n            st.push(i);\n        }\n        reverse(next_s.begin(),next_s.end());\n        return next_s;\n    }\n\n    vector<int> nsl(vector<int>& heights, int n){\n        vector<int > prev_s;\n        stack<int> st;\n        for(int i=0;i<n;i++){\n            while(!st.empty() and heights[st.top()]>=heights[i]){\n                st.pop();\n            }\n            if(st.empty()) {\n                prev_s.push_back(-1);\n            }\n            else{\n                prev_s.push_back(st.top());\n            }\n            st.push(i);\n        }\n        return prev_s;\n}\n    int largestRectangleArea(vector<int>& heights) {\n        int n=heights.size();\n        vector<int> v_nsl=nsl(heights,n);\n        vector<int> v_nsr=nsr(heights,n);\n        //for(auto it: v_nsr) cout<<it<<' ';\n        int max_area=INT_MIN;\n        for(int i=0;i<n;i++){\n            max_area=  max((v_nsr[i]-v_nsl[i]-1)* heights[i],max_area) ;   \n            //cout<<max_area<<\" \";\n        }\n        return max_area;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-rectangle-in-histogram","has_notes":false}