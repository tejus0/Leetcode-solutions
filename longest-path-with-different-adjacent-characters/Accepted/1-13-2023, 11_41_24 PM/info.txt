{"id":877587847,"lang":"cpp","lang_name":"C++","time":"1 week, 4 days","timestamp":1673633484,"status":10,"status_display":"Accepted","runtime":"910 ms","url":"/submissions/detail/877587847/","is_pending":"Not Pending","title":"Longest Path With Different Adjacent Characters","memory":"237.8 MB","code":"class Solution {\npublic:\n    int solve(vector<int>adj[],string &s,int n,int par,int &ans)\n    {\n        int c=0;\n        vector<int>v;\n        for(auto i:adj[n])\n        {\n            if(i==par)\n                continue;\n            int x=solve(adj,s,i,n,ans);\n            v.push_back(x);\n        }\n        sort(v.begin(),v.end(),greater<int>());\n        int a=0,b=0,y=v.size();\n        if(y>0)\n            a=v[0];\n        if(y>1)\n            b=v[1];\n        ans=max(ans,1+a+b);\n        if(par!=-1 && s[n]!=s[par])\n            return 1+max(a,b);\n        return 0;\n    }\n    int longestPath(vector<int>&v, string s) {\n        int n=v.size();\n        vector<int>adj[n];\n        for(int i=1;i<n;i++)\n        {\n            adj[i].push_back(v[i]);\n            adj[v[i]].push_back(i);\n        }\n        int ans=1;\n        int x=solve(adj,s,0,-1,ans);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-path-with-different-adjacent-characters","has_notes":false}