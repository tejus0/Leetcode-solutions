{"id":862791396,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1671556693,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/862791396/","is_pending":"Not Pending","title":"Combination Sum II","memory":"10.9 MB","code":"class Solution {\npublic:\n    vector<vector<int>> result;\n    \n    void sum2(vector<int> &curr, int target, int sum, vector<int> &candidates, int ind, int n){\n        if(target == sum){\n            result.push_back(curr);\n            return;\n        }\n        else if(sum>target){\n            return;\n        }\n        \n        for(int i = ind; i < n; i++){\n            if(i > ind && candidates[i]==candidates[i-1])               //to avoid picking up the same combnations i.e. we don't pick same element for certain kth position of a combination \n                continue;\n            sum += candidates[i];\n            curr.push_back(candidates[i]);\n            sum2(curr, target, sum, candidates, i+1, n);\n            sum -= candidates[i];\n            curr.pop_back();\n        }\n        \n    }\n    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {\n        vector<int> curr;\n        int n = candidates.size();\n        sort(candidates.begin(), candidates.end());\n        sum2(curr, target, 0, candidates, 0, n);\n        return result;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum-ii","has_notes":false}