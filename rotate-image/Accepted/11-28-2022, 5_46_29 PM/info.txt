{"id":851158463,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1669637789,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/851158463/","is_pending":"Not Pending","title":"Rotate Image","memory":"7.2 MB","code":"class Solution {\npublic:\n    void rotate(vector<vector<int>>& matrix) {\n        int n=matrix.size();\n        for(int i=0;i<n;i++){\n            for(int j=i;j<n;j++){\n                swap(matrix[i][j],matrix[j][i]);\n            }\n        }\n        //reverse(matrix.begin(),matrix.end());\n        for(int i=0; i<n; ++i) {\n\t\t// 2 Pointer approach :  just like we do in 1D array we take left and right pointers\n\t\t// and swap the values and then make those pointers intersect at some point.\n            int left = 0, right = n-1;\n            while(left < right) {\n                swap(matrix[i][left], matrix[i][right]);\n                ++left;\n                --right;\n            }\n        }\n    }\n};","compare_result":"111111111111111111111","title_slug":"rotate-image","has_notes":false}