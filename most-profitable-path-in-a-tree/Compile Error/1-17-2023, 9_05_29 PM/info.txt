{"id":879966836,"lang":"cpp","lang_name":"C++","time":"1Â week","timestamp":1673969729,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/879966836/","is_pending":"Not Pending","title":"Most Profitable Path in a Tree","memory":"N/A","code":"class Solution {\n    vector<int>Bdist;  // timeMap;\n    vector<bool> vis;\n    unordered_map<int, vector<int>> g;\n    int ans = INT_MIN;\n\n    bool callForBob(int bob, int dist){\n        if(bob == 0){\n            Bdist[bob] = dist;\n            return true;\n        }\n\n        vis[bob] = 1;\n        bool canReach = 0;\n        for(auto it:g[bob]){\n            if(vis[it]) continue;\n            if(callForBob(it, dist+1) == true){\n                canReach = 1;\n                break;\n            }\n        }\n        vis[bob] = 0;\n\n        if(canReach == 1){\n            Bdist[bob] = dist;\n            return true;\n        }\n        return false;\n    }\n\n    void callForAlice(int node, int sec, int cost, vector<int> &amount){\n        vis[node] = 1;\n\n        if(Bdist[node] > sec)\n            cost += amount[node];\n        else if(Bdist[node] == sec)\n            cost += (amount[node])/2;\n        \n        for(auto it:g[node]){\n            if(vis[it]) continue;\n            callForAlice(it, sec+1, cost, amount);\n        }\n        vis[node] = 0;\n        if(node != 0 && g[node].size() == 1){\n            ans = max(ans, cost);\n        }\n    }\n\npublic:\n    int mostProfitablePath(vector<vector<int>>& edges, int bob, vector<int>& amount) {\n        int n = amount.size();\n        // forming the tree as a undirected graph\n        for(auto it:edges){\n            g[it[0]].push_back(it[1]);\n            g[it[1]].push_back(it[0]);\n        }\n        // visited array of size n\n        vis.resize(n);\n        timeMap.resize(n, INT_MAX);\n\n        int sec = 0;\n        callForBob(bob, sec);\n\n        callForAlice(0, sec, 0, amount);\n\n        return ans;\n    }\n};","compare_result":null,"title_slug":"most-profitable-path-in-a-tree","has_notes":false}