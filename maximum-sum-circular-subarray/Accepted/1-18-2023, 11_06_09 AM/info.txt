{"id":880352141,"lang":"cpp","lang_name":"C++","time":"1Â week","timestamp":1674020169,"status":10,"status_display":"Accepted","runtime":"75 ms","url":"/submissions/detail/880352141/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"39.9 MB","code":"class Solution {\n    int Kadane(vector<int>& nums){    \n        int mxsum=nums[0],cs=nums[0];\n        for(auto i=1;i<nums.size();i++){\n            cs += nums[i];\n            if(cs<nums[i]) cs=nums[i];\n            mxsum=max(cs,mxsum); \n        }\n        return mxsum;\n    }\npublic:\n    int maxSubarraySumCircular(vector<int>& nums) {\n        int total=0;\n        int origmax=Kadane(nums);\n        for(int i=0;i<nums.size();i++){\n            total += nums[i];\n            nums[i]= nums[i]*-1;            \n        }\n        int minsum=Kadane(nums);\n        if(minsum+total==0) return origmax;\n        return max(total+minsum,origmax);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-circular-subarray","has_notes":false}